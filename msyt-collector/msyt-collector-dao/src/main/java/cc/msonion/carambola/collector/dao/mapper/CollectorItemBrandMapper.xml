<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.msonion.carambola.collector.dao.mapper.CollectorItemBrandMapper">
  <resultMap id="BaseResultMap" type="cc.msonion.carambola.collector.pojo.CollectorItemBrand">
    <id column="idx" jdbcType="BIGINT" property="idx" />
    <result column="idx_code" jdbcType="BIGINT" property="idxCode" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="logo_small" jdbcType="VARCHAR" property="logoSmall" />
    <result column="logo_middle" jdbcType="VARCHAR" property="logoMiddle" />
    <result column="logo_big" jdbcType="VARCHAR" property="logoBig" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="create_by_member_idx" jdbcType="BIGINT" property="createByMemberIdx" />
    <result column="update_by_member_idx" jdbcType="BIGINT" property="updateByMemberIdx" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="ext" jdbcType="VARCHAR" property="ext" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    idx, idx_code, code, brand_name, state, logo_small, logo_middle, logo_big, introduce, 
    create_by_member_idx, update_by_member_idx, create_time, update_time, status, version, 
    ext
  </sql>
  <select id="selectByExample" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBrandExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_item_brand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_item_brand
    where idx = #{idx,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_item_brand
    where idx = #{idx,jdbcType=BIGINT}
  </delete>
  <update id="deleteByIdxesWithExample" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBrandExample">
    update tb_item_brand set status = 0
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <insert id="insert" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBrand">
    insert into tb_item_brand (idx, idx_code, code, 
      brand_name, state, logo_small, 
      logo_middle, logo_big, introduce, 
      create_by_member_idx, update_by_member_idx, create_time, 
      update_time, status, version, 
      ext)
    values (#{idx,jdbcType=BIGINT}, #{idxCode,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, 
      #{brandName,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{logoSmall,jdbcType=VARCHAR}, 
      #{logoMiddle,jdbcType=VARCHAR}, #{logoBig,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{createByMemberIdx,jdbcType=BIGINT}, #{updateByMemberIdx,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT}, #{version,jdbcType=BIGINT}, 
      #{ext,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBrand">
    insert into tb_item_brand
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idx != null">
        idx,
      </if>
      <if test="idxCode != null">
        idx_code,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="brandName != null">
        brand_name,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="logoSmall != null">
        logo_small,
      </if>
      <if test="logoMiddle != null">
        logo_middle,
      </if>
      <if test="logoBig != null">
        logo_big,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="createByMemberIdx != null">
        create_by_member_idx,
      </if>
      <if test="updateByMemberIdx != null">
        update_by_member_idx,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="ext != null">
        ext,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idx != null">
        #{idx,jdbcType=BIGINT},
      </if>
      <if test="idxCode != null">
        #{idxCode,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null">
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="logoSmall != null">
        #{logoSmall,jdbcType=VARCHAR},
      </if>
      <if test="logoMiddle != null">
        #{logoMiddle,jdbcType=VARCHAR},
      </if>
      <if test="logoBig != null">
        #{logoBig,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="createByMemberIdx != null">
        #{createByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="updateByMemberIdx != null">
        #{updateByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="ext != null">
        #{ext,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBrandExample" resultType="java.lang.Long">
    select count(idx) from tb_item_brand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_item_brand
    <set>
      <if test="record.idx != null">
        idx = #{record.idx,jdbcType=BIGINT},
      </if>
      <if test="record.idxCode != null">
        idx_code = #{record.idxCode,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.brandName != null">
        brand_name = #{record.brandName,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.logoSmall != null">
        logo_small = #{record.logoSmall,jdbcType=VARCHAR},
      </if>
      <if test="record.logoMiddle != null">
        logo_middle = #{record.logoMiddle,jdbcType=VARCHAR},
      </if>
      <if test="record.logoBig != null">
        logo_big = #{record.logoBig,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.createByMemberIdx != null">
        create_by_member_idx = #{record.createByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="record.updateByMemberIdx != null">
        update_by_member_idx = #{record.updateByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.ext != null">
        ext = #{record.ext,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_item_brand
    set idx = #{record.idx,jdbcType=BIGINT},
      idx_code = #{record.idxCode,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      brand_name = #{record.brandName,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      logo_small = #{record.logoSmall,jdbcType=VARCHAR},
      logo_middle = #{record.logoMiddle,jdbcType=VARCHAR},
      logo_big = #{record.logoBig,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      create_by_member_idx = #{record.createByMemberIdx,jdbcType=BIGINT},
      update_by_member_idx = #{record.updateByMemberIdx,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=SMALLINT},
      version = #{record.version,jdbcType=BIGINT},
      ext = #{record.ext,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBrand">
    update tb_item_brand
    <set>
      <if test="idxCode != null">
        idx_code = #{idxCode,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null">
        brand_name = #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="logoSmall != null">
        logo_small = #{logoSmall,jdbcType=VARCHAR},
      </if>
      <if test="logoMiddle != null">
        logo_middle = #{logoMiddle,jdbcType=VARCHAR},
      </if>
      <if test="logoBig != null">
        logo_big = #{logoBig,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="createByMemberIdx != null">
        create_by_member_idx = #{createByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="updateByMemberIdx != null">
        update_by_member_idx = #{updateByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="ext != null">
        ext = #{ext,jdbcType=VARCHAR},
      </if>
    </set>
    where idx = #{idx,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBrand">
    update tb_item_brand
    set idx_code = #{idxCode,jdbcType=BIGINT},
      code = #{code,jdbcType=VARCHAR},
      brand_name = #{brandName,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      logo_small = #{logoSmall,jdbcType=VARCHAR},
      logo_middle = #{logoMiddle,jdbcType=VARCHAR},
      logo_big = #{logoBig,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      create_by_member_idx = #{createByMemberIdx,jdbcType=BIGINT},
      update_by_member_idx = #{updateByMemberIdx,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      version = #{version,jdbcType=BIGINT},
      ext = #{ext,jdbcType=VARCHAR}
    where idx = #{idx,jdbcType=BIGINT}
  </update>
</mapper>