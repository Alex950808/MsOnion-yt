<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.msonion.carambola.collector.dao.mapper.CollectorItemHistoryMapper">
  <resultMap id="BaseResultMap" type="cc.msonion.carambola.collector.pojo.CollectorItemHistory">
    <id column="idx" jdbcType="BIGINT" property="idx" />
    <result column="idx_code" jdbcType="BIGINT" property="idxCode" />
    <result column="item_idx" jdbcType="BIGINT" property="itemIdx" />
    <result column="platform_idx" jdbcType="BIGINT" property="platformIdx" />
    <result column="item_state_idx" jdbcType="BIGINT" property="itemStateIdx" />
    <result column="cn_name" jdbcType="VARCHAR" property="cnName" />
    <result column="en_name" jdbcType="VARCHAR" property="enName" />
    <result column="brand_idx" jdbcType="BIGINT" property="brandIdx" />
    <result column="origin_idx" jdbcType="BIGINT" property="originIdx" />
    <result column="category_idx" jdbcType="BIGINT" property="categoryIdx" />
    <result column="specification" jdbcType="VARCHAR" property="specification" />
    <result column="warehouse_type_idx" jdbcType="BIGINT" property="warehouseTypeIdx" />
    <result column="batch" jdbcType="INTEGER" property="batch" />
    <result column="collection_remark" jdbcType="VARCHAR" property="collectionRemark" />
    <result column="purchase_status" jdbcType="SMALLINT" property="purchaseStatus" />
    <result column="collection_status" jdbcType="SMALLINT" property="collectionStatus" />
    <result column="home_show" jdbcType="SMALLINT" property="homeShow" />
    <result column="weight" jdbcType="BIGINT" property="weight" />
    <result column="create_by_member_idx" jdbcType="BIGINT" property="createByMemberIdx" />
    <result column="update_by_member_idx" jdbcType="BIGINT" property="updateByMemberIdx" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="ext" jdbcType="VARCHAR" property="ext" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    idx, idx_code, item_idx, platform_idx, item_state_idx, cn_name, en_name, brand_idx, 
    origin_idx, category_idx, specification, warehouse_type_idx, batch, collection_remark, 
    purchase_status, collection_status, home_show, weight, create_by_member_idx, update_by_member_idx, 
    create_time, update_time, status, version, ext
  </sql>
  <select id="selectByExample" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_item_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_item_history
    where idx = #{idx,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_item_history
    where idx = #{idx,jdbcType=BIGINT}
  </delete>
  <update id="deleteByIdxesWithExample" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemHistoryExample">
    update tb_item_history set status = 0
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <insert id="insert" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemHistory">
    insert into tb_item_history (idx, idx_code, item_idx, 
      platform_idx, item_state_idx, cn_name, 
      en_name, brand_idx, origin_idx, 
      category_idx, specification, warehouse_type_idx, 
      batch, collection_remark, purchase_status, 
      collection_status, home_show, weight, 
      create_by_member_idx, update_by_member_idx, create_time, 
      update_time, status, version, 
      ext)
    values (#{idx,jdbcType=BIGINT}, #{idxCode,jdbcType=BIGINT}, #{itemIdx,jdbcType=BIGINT}, 
      #{platformIdx,jdbcType=BIGINT}, #{itemStateIdx,jdbcType=BIGINT}, #{cnName,jdbcType=VARCHAR}, 
      #{enName,jdbcType=VARCHAR}, #{brandIdx,jdbcType=BIGINT}, #{originIdx,jdbcType=BIGINT}, 
      #{categoryIdx,jdbcType=BIGINT}, #{specification,jdbcType=VARCHAR}, #{warehouseTypeIdx,jdbcType=BIGINT}, 
      #{batch,jdbcType=INTEGER}, #{collectionRemark,jdbcType=VARCHAR}, #{purchaseStatus,jdbcType=SMALLINT}, 
      #{collectionStatus,jdbcType=SMALLINT}, #{homeShow,jdbcType=SMALLINT}, #{weight,jdbcType=BIGINT}, 
      #{createByMemberIdx,jdbcType=BIGINT}, #{updateByMemberIdx,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT}, #{version,jdbcType=BIGINT}, 
      #{ext,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemHistory">
    insert into tb_item_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idx != null">
        idx,
      </if>
      <if test="idxCode != null">
        idx_code,
      </if>
      <if test="itemIdx != null">
        item_idx,
      </if>
      <if test="platformIdx != null">
        platform_idx,
      </if>
      <if test="itemStateIdx != null">
        item_state_idx,
      </if>
      <if test="cnName != null">
        cn_name,
      </if>
      <if test="enName != null">
        en_name,
      </if>
      <if test="brandIdx != null">
        brand_idx,
      </if>
      <if test="originIdx != null">
        origin_idx,
      </if>
      <if test="categoryIdx != null">
        category_idx,
      </if>
      <if test="specification != null">
        specification,
      </if>
      <if test="warehouseTypeIdx != null">
        warehouse_type_idx,
      </if>
      <if test="batch != null">
        batch,
      </if>
      <if test="collectionRemark != null">
        collection_remark,
      </if>
      <if test="purchaseStatus != null">
        purchase_status,
      </if>
      <if test="collectionStatus != null">
        collection_status,
      </if>
      <if test="homeShow != null">
        home_show,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="createByMemberIdx != null">
        create_by_member_idx,
      </if>
      <if test="updateByMemberIdx != null">
        update_by_member_idx,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="ext != null">
        ext,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idx != null">
        #{idx,jdbcType=BIGINT},
      </if>
      <if test="idxCode != null">
        #{idxCode,jdbcType=BIGINT},
      </if>
      <if test="itemIdx != null">
        #{itemIdx,jdbcType=BIGINT},
      </if>
      <if test="platformIdx != null">
        #{platformIdx,jdbcType=BIGINT},
      </if>
      <if test="itemStateIdx != null">
        #{itemStateIdx,jdbcType=BIGINT},
      </if>
      <if test="cnName != null">
        #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="brandIdx != null">
        #{brandIdx,jdbcType=BIGINT},
      </if>
      <if test="originIdx != null">
        #{originIdx,jdbcType=BIGINT},
      </if>
      <if test="categoryIdx != null">
        #{categoryIdx,jdbcType=BIGINT},
      </if>
      <if test="specification != null">
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="warehouseTypeIdx != null">
        #{warehouseTypeIdx,jdbcType=BIGINT},
      </if>
      <if test="batch != null">
        #{batch,jdbcType=INTEGER},
      </if>
      <if test="collectionRemark != null">
        #{collectionRemark,jdbcType=VARCHAR},
      </if>
      <if test="purchaseStatus != null">
        #{purchaseStatus,jdbcType=SMALLINT},
      </if>
      <if test="collectionStatus != null">
        #{collectionStatus,jdbcType=SMALLINT},
      </if>
      <if test="homeShow != null">
        #{homeShow,jdbcType=SMALLINT},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=BIGINT},
      </if>
      <if test="createByMemberIdx != null">
        #{createByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="updateByMemberIdx != null">
        #{updateByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="ext != null">
        #{ext,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemHistoryExample" resultType="java.lang.Long">
    select count(idx) from tb_item_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_item_history
    <set>
      <if test="record.idx != null">
        idx = #{record.idx,jdbcType=BIGINT},
      </if>
      <if test="record.idxCode != null">
        idx_code = #{record.idxCode,jdbcType=BIGINT},
      </if>
      <if test="record.itemIdx != null">
        item_idx = #{record.itemIdx,jdbcType=BIGINT},
      </if>
      <if test="record.platformIdx != null">
        platform_idx = #{record.platformIdx,jdbcType=BIGINT},
      </if>
      <if test="record.itemStateIdx != null">
        item_state_idx = #{record.itemStateIdx,jdbcType=BIGINT},
      </if>
      <if test="record.cnName != null">
        cn_name = #{record.cnName,jdbcType=VARCHAR},
      </if>
      <if test="record.enName != null">
        en_name = #{record.enName,jdbcType=VARCHAR},
      </if>
      <if test="record.brandIdx != null">
        brand_idx = #{record.brandIdx,jdbcType=BIGINT},
      </if>
      <if test="record.originIdx != null">
        origin_idx = #{record.originIdx,jdbcType=BIGINT},
      </if>
      <if test="record.categoryIdx != null">
        category_idx = #{record.categoryIdx,jdbcType=BIGINT},
      </if>
      <if test="record.specification != null">
        specification = #{record.specification,jdbcType=VARCHAR},
      </if>
      <if test="record.warehouseTypeIdx != null">
        warehouse_type_idx = #{record.warehouseTypeIdx,jdbcType=BIGINT},
      </if>
      <if test="record.batch != null">
        batch = #{record.batch,jdbcType=INTEGER},
      </if>
      <if test="record.collectionRemark != null">
        collection_remark = #{record.collectionRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseStatus != null">
        purchase_status = #{record.purchaseStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.collectionStatus != null">
        collection_status = #{record.collectionStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.homeShow != null">
        home_show = #{record.homeShow,jdbcType=SMALLINT},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=BIGINT},
      </if>
      <if test="record.createByMemberIdx != null">
        create_by_member_idx = #{record.createByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="record.updateByMemberIdx != null">
        update_by_member_idx = #{record.updateByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.ext != null">
        ext = #{record.ext,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_item_history
    set idx = #{record.idx,jdbcType=BIGINT},
      idx_code = #{record.idxCode,jdbcType=BIGINT},
      item_idx = #{record.itemIdx,jdbcType=BIGINT},
      platform_idx = #{record.platformIdx,jdbcType=BIGINT},
      item_state_idx = #{record.itemStateIdx,jdbcType=BIGINT},
      cn_name = #{record.cnName,jdbcType=VARCHAR},
      en_name = #{record.enName,jdbcType=VARCHAR},
      brand_idx = #{record.brandIdx,jdbcType=BIGINT},
      origin_idx = #{record.originIdx,jdbcType=BIGINT},
      category_idx = #{record.categoryIdx,jdbcType=BIGINT},
      specification = #{record.specification,jdbcType=VARCHAR},
      warehouse_type_idx = #{record.warehouseTypeIdx,jdbcType=BIGINT},
      batch = #{record.batch,jdbcType=INTEGER},
      collection_remark = #{record.collectionRemark,jdbcType=VARCHAR},
      purchase_status = #{record.purchaseStatus,jdbcType=SMALLINT},
      collection_status = #{record.collectionStatus,jdbcType=SMALLINT},
      home_show = #{record.homeShow,jdbcType=SMALLINT},
      weight = #{record.weight,jdbcType=BIGINT},
      create_by_member_idx = #{record.createByMemberIdx,jdbcType=BIGINT},
      update_by_member_idx = #{record.updateByMemberIdx,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=SMALLINT},
      version = #{record.version,jdbcType=BIGINT},
      ext = #{record.ext,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemHistory">
    update tb_item_history
    <set>
      <if test="idxCode != null">
        idx_code = #{idxCode,jdbcType=BIGINT},
      </if>
      <if test="itemIdx != null">
        item_idx = #{itemIdx,jdbcType=BIGINT},
      </if>
      <if test="platformIdx != null">
        platform_idx = #{platformIdx,jdbcType=BIGINT},
      </if>
      <if test="itemStateIdx != null">
        item_state_idx = #{itemStateIdx,jdbcType=BIGINT},
      </if>
      <if test="cnName != null">
        cn_name = #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        en_name = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="brandIdx != null">
        brand_idx = #{brandIdx,jdbcType=BIGINT},
      </if>
      <if test="originIdx != null">
        origin_idx = #{originIdx,jdbcType=BIGINT},
      </if>
      <if test="categoryIdx != null">
        category_idx = #{categoryIdx,jdbcType=BIGINT},
      </if>
      <if test="specification != null">
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="warehouseTypeIdx != null">
        warehouse_type_idx = #{warehouseTypeIdx,jdbcType=BIGINT},
      </if>
      <if test="batch != null">
        batch = #{batch,jdbcType=INTEGER},
      </if>
      <if test="collectionRemark != null">
        collection_remark = #{collectionRemark,jdbcType=VARCHAR},
      </if>
      <if test="purchaseStatus != null">
        purchase_status = #{purchaseStatus,jdbcType=SMALLINT},
      </if>
      <if test="collectionStatus != null">
        collection_status = #{collectionStatus,jdbcType=SMALLINT},
      </if>
      <if test="homeShow != null">
        home_show = #{homeShow,jdbcType=SMALLINT},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=BIGINT},
      </if>
      <if test="createByMemberIdx != null">
        create_by_member_idx = #{createByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="updateByMemberIdx != null">
        update_by_member_idx = #{updateByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="ext != null">
        ext = #{ext,jdbcType=VARCHAR},
      </if>
    </set>
    where idx = #{idx,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemHistory">
    update tb_item_history
    set idx_code = #{idxCode,jdbcType=BIGINT},
      item_idx = #{itemIdx,jdbcType=BIGINT},
      platform_idx = #{platformIdx,jdbcType=BIGINT},
      item_state_idx = #{itemStateIdx,jdbcType=BIGINT},
      cn_name = #{cnName,jdbcType=VARCHAR},
      en_name = #{enName,jdbcType=VARCHAR},
      brand_idx = #{brandIdx,jdbcType=BIGINT},
      origin_idx = #{originIdx,jdbcType=BIGINT},
      category_idx = #{categoryIdx,jdbcType=BIGINT},
      specification = #{specification,jdbcType=VARCHAR},
      warehouse_type_idx = #{warehouseTypeIdx,jdbcType=BIGINT},
      batch = #{batch,jdbcType=INTEGER},
      collection_remark = #{collectionRemark,jdbcType=VARCHAR},
      purchase_status = #{purchaseStatus,jdbcType=SMALLINT},
      collection_status = #{collectionStatus,jdbcType=SMALLINT},
      home_show = #{homeShow,jdbcType=SMALLINT},
      weight = #{weight,jdbcType=BIGINT},
      create_by_member_idx = #{createByMemberIdx,jdbcType=BIGINT},
      update_by_member_idx = #{updateByMemberIdx,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      version = #{version,jdbcType=BIGINT},
      ext = #{ext,jdbcType=VARCHAR}
    where idx = #{idx,jdbcType=BIGINT}
  </update>
</mapper>