<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.msonion.carambola.collector.dao.mapper.CollectorItemBiddingMapper">
  <resultMap id="BaseResultMap" type="cc.msonion.carambola.collector.pojo.CollectorItemBidding">
    <id column="idx" jdbcType="BIGINT" property="idx" />
    <result column="idx_code" jdbcType="BIGINT" property="idxCode" />
    <result column="item_idx" jdbcType="BIGINT" property="itemIdx" />
    <result column="amazon_price" jdbcType="INTEGER" property="amazonPrice" />
    <result column="tmall_price" jdbcType="INTEGER" property="tmallPrice" />
    <result column="jd_price" jdbcType="INTEGER" property="jdPrice" />
    <result column="red_price" jdbcType="INTEGER" property="redPrice" />
    <result column="abroad_price" jdbcType="INTEGER" property="abroadPrice" />
    <result column="domestic_price" jdbcType="INTEGER" property="domesticPrice" />
    <result column="origin_country_price" jdbcType="INTEGER" property="originCountryPrice" />
    <result column="koala_price" jdbcType="INTEGER" property="koalaPrice" />
    <result column="jumei_price" jdbcType="INTEGER" property="jumeiPrice" />
    <result column="create_by_member_idx" jdbcType="BIGINT" property="createByMemberIdx" />
    <result column="update_by_member_idx" jdbcType="BIGINT" property="updateByMemberIdx" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="ext" jdbcType="VARCHAR" property="ext" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    idx, idx_code, item_idx, amazon_price, tmall_price, jd_price, red_price, abroad_price, 
    domestic_price, origin_country_price, koala_price, jumei_price, create_by_member_idx, 
    update_by_member_idx, create_time, update_time, status, version, ext
  </sql>
  <select id="selectByExample" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBiddingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_item_bidding
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_item_bidding
    where idx = #{idx,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_item_bidding
    where idx = #{idx,jdbcType=BIGINT}
  </delete>
  <update id="deleteByIdxesWithExample" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBiddingExample">
    update tb_item_bidding set status = 0
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <insert id="insert" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBidding">
    insert into tb_item_bidding (idx, idx_code, item_idx, 
      amazon_price, tmall_price, jd_price, 
      red_price, abroad_price, domestic_price, 
      origin_country_price, koala_price, jumei_price, 
      create_by_member_idx, update_by_member_idx, create_time, 
      update_time, status, version, 
      ext)
    values (#{idx,jdbcType=BIGINT}, #{idxCode,jdbcType=BIGINT}, #{itemIdx,jdbcType=BIGINT}, 
      #{amazonPrice,jdbcType=INTEGER}, #{tmallPrice,jdbcType=INTEGER}, #{jdPrice,jdbcType=INTEGER}, 
      #{redPrice,jdbcType=INTEGER}, #{abroadPrice,jdbcType=INTEGER}, #{domesticPrice,jdbcType=INTEGER}, 
      #{originCountryPrice,jdbcType=INTEGER}, #{koalaPrice,jdbcType=INTEGER}, #{jumeiPrice,jdbcType=INTEGER}, 
      #{createByMemberIdx,jdbcType=BIGINT}, #{updateByMemberIdx,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT}, #{version,jdbcType=BIGINT}, 
      #{ext,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBidding">
    insert into tb_item_bidding
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idx != null">
        idx,
      </if>
      <if test="idxCode != null">
        idx_code,
      </if>
      <if test="itemIdx != null">
        item_idx,
      </if>
      <if test="amazonPrice != null">
        amazon_price,
      </if>
      <if test="tmallPrice != null">
        tmall_price,
      </if>
      <if test="jdPrice != null">
        jd_price,
      </if>
      <if test="redPrice != null">
        red_price,
      </if>
      <if test="abroadPrice != null">
        abroad_price,
      </if>
      <if test="domesticPrice != null">
        domestic_price,
      </if>
      <if test="originCountryPrice != null">
        origin_country_price,
      </if>
      <if test="koalaPrice != null">
        koala_price,
      </if>
      <if test="jumeiPrice != null">
        jumei_price,
      </if>
      <if test="createByMemberIdx != null">
        create_by_member_idx,
      </if>
      <if test="updateByMemberIdx != null">
        update_by_member_idx,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="ext != null">
        ext,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idx != null">
        #{idx,jdbcType=BIGINT},
      </if>
      <if test="idxCode != null">
        #{idxCode,jdbcType=BIGINT},
      </if>
      <if test="itemIdx != null">
        #{itemIdx,jdbcType=BIGINT},
      </if>
      <if test="amazonPrice != null">
        #{amazonPrice,jdbcType=INTEGER},
      </if>
      <if test="tmallPrice != null">
        #{tmallPrice,jdbcType=INTEGER},
      </if>
      <if test="jdPrice != null">
        #{jdPrice,jdbcType=INTEGER},
      </if>
      <if test="redPrice != null">
        #{redPrice,jdbcType=INTEGER},
      </if>
      <if test="abroadPrice != null">
        #{abroadPrice,jdbcType=INTEGER},
      </if>
      <if test="domesticPrice != null">
        #{domesticPrice,jdbcType=INTEGER},
      </if>
      <if test="originCountryPrice != null">
        #{originCountryPrice,jdbcType=INTEGER},
      </if>
      <if test="koalaPrice != null">
        #{koalaPrice,jdbcType=INTEGER},
      </if>
      <if test="jumeiPrice != null">
        #{jumeiPrice,jdbcType=INTEGER},
      </if>
      <if test="createByMemberIdx != null">
        #{createByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="updateByMemberIdx != null">
        #{updateByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="ext != null">
        #{ext,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBiddingExample" resultType="java.lang.Long">
    select count(idx) from tb_item_bidding
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_item_bidding
    <set>
      <if test="record.idx != null">
        idx = #{record.idx,jdbcType=BIGINT},
      </if>
      <if test="record.idxCode != null">
        idx_code = #{record.idxCode,jdbcType=BIGINT},
      </if>
      <if test="record.itemIdx != null">
        item_idx = #{record.itemIdx,jdbcType=BIGINT},
      </if>
      <if test="record.amazonPrice != null">
        amazon_price = #{record.amazonPrice,jdbcType=INTEGER},
      </if>
      <if test="record.tmallPrice != null">
        tmall_price = #{record.tmallPrice,jdbcType=INTEGER},
      </if>
      <if test="record.jdPrice != null">
        jd_price = #{record.jdPrice,jdbcType=INTEGER},
      </if>
      <if test="record.redPrice != null">
        red_price = #{record.redPrice,jdbcType=INTEGER},
      </if>
      <if test="record.abroadPrice != null">
        abroad_price = #{record.abroadPrice,jdbcType=INTEGER},
      </if>
      <if test="record.domesticPrice != null">
        domestic_price = #{record.domesticPrice,jdbcType=INTEGER},
      </if>
      <if test="record.originCountryPrice != null">
        origin_country_price = #{record.originCountryPrice,jdbcType=INTEGER},
      </if>
      <if test="record.koalaPrice != null">
        koala_price = #{record.koalaPrice,jdbcType=INTEGER},
      </if>
      <if test="record.jumeiPrice != null">
        jumei_price = #{record.jumeiPrice,jdbcType=INTEGER},
      </if>
      <if test="record.createByMemberIdx != null">
        create_by_member_idx = #{record.createByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="record.updateByMemberIdx != null">
        update_by_member_idx = #{record.updateByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.ext != null">
        ext = #{record.ext,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_item_bidding
    set idx = #{record.idx,jdbcType=BIGINT},
      idx_code = #{record.idxCode,jdbcType=BIGINT},
      item_idx = #{record.itemIdx,jdbcType=BIGINT},
      amazon_price = #{record.amazonPrice,jdbcType=INTEGER},
      tmall_price = #{record.tmallPrice,jdbcType=INTEGER},
      jd_price = #{record.jdPrice,jdbcType=INTEGER},
      red_price = #{record.redPrice,jdbcType=INTEGER},
      abroad_price = #{record.abroadPrice,jdbcType=INTEGER},
      domestic_price = #{record.domesticPrice,jdbcType=INTEGER},
      origin_country_price = #{record.originCountryPrice,jdbcType=INTEGER},
      koala_price = #{record.koalaPrice,jdbcType=INTEGER},
      jumei_price = #{record.jumeiPrice,jdbcType=INTEGER},
      create_by_member_idx = #{record.createByMemberIdx,jdbcType=BIGINT},
      update_by_member_idx = #{record.updateByMemberIdx,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=SMALLINT},
      version = #{record.version,jdbcType=BIGINT},
      ext = #{record.ext,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBidding">
    update tb_item_bidding
    <set>
      <if test="idxCode != null">
        idx_code = #{idxCode,jdbcType=BIGINT},
      </if>
      <if test="itemIdx != null">
        item_idx = #{itemIdx,jdbcType=BIGINT},
      </if>
      <if test="amazonPrice != null">
        amazon_price = #{amazonPrice,jdbcType=INTEGER},
      </if>
      <if test="tmallPrice != null">
        tmall_price = #{tmallPrice,jdbcType=INTEGER},
      </if>
      <if test="jdPrice != null">
        jd_price = #{jdPrice,jdbcType=INTEGER},
      </if>
      <if test="redPrice != null">
        red_price = #{redPrice,jdbcType=INTEGER},
      </if>
      <if test="abroadPrice != null">
        abroad_price = #{abroadPrice,jdbcType=INTEGER},
      </if>
      <if test="domesticPrice != null">
        domestic_price = #{domesticPrice,jdbcType=INTEGER},
      </if>
      <if test="originCountryPrice != null">
        origin_country_price = #{originCountryPrice,jdbcType=INTEGER},
      </if>
      <if test="koalaPrice != null">
        koala_price = #{koalaPrice,jdbcType=INTEGER},
      </if>
      <if test="jumeiPrice != null">
        jumei_price = #{jumeiPrice,jdbcType=INTEGER},
      </if>
      <if test="createByMemberIdx != null">
        create_by_member_idx = #{createByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="updateByMemberIdx != null">
        update_by_member_idx = #{updateByMemberIdx,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="ext != null">
        ext = #{ext,jdbcType=VARCHAR},
      </if>
    </set>
    where idx = #{idx,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.msonion.carambola.collector.pojo.CollectorItemBidding">
    update tb_item_bidding
    set idx_code = #{idxCode,jdbcType=BIGINT},
      item_idx = #{itemIdx,jdbcType=BIGINT},
      amazon_price = #{amazonPrice,jdbcType=INTEGER},
      tmall_price = #{tmallPrice,jdbcType=INTEGER},
      jd_price = #{jdPrice,jdbcType=INTEGER},
      red_price = #{redPrice,jdbcType=INTEGER},
      abroad_price = #{abroadPrice,jdbcType=INTEGER},
      domestic_price = #{domesticPrice,jdbcType=INTEGER},
      origin_country_price = #{originCountryPrice,jdbcType=INTEGER},
      koala_price = #{koalaPrice,jdbcType=INTEGER},
      jumei_price = #{jumeiPrice,jdbcType=INTEGER},
      create_by_member_idx = #{createByMemberIdx,jdbcType=BIGINT},
      update_by_member_idx = #{updateByMemberIdx,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      version = #{version,jdbcType=BIGINT},
      ext = #{ext,jdbcType=VARCHAR}
    where idx = #{idx,jdbcType=BIGINT}
  </update>
</mapper>