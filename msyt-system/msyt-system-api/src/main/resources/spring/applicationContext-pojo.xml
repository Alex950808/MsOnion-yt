<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			 									 http://www.springframework.org/schema/beans/spring-beans.xsd
        										 http://www.springframework.org/schema/context 
        										 http://www.springframework.org/schema/context/spring-context.xsd
        										 http://code.alibabatech.com/schema/dubbo 
        										 http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!-- 配置加载配置文件 -->
	<!-- <context:property-placeholder location="classpath:properties/*.properties"/> -->
	
	<!-- 不是WEB工程，不要 classpath: , WEB工程，必须加上 classpath:  -->
	<!-- <context:property-placeholder location="classpath:properties/*.properties"/> -->

	<!-- 配置文件环境切换 ### Begin  -->
	<!--
             # Environment :
             pro(production、生产环境) , pre(preview、预发布环境) , test（测试环境） , dev(develop、开发环境) , sta (stable、稳定环境)

            -->

	<context:property-placeholder location="classpath:*/properties/config-*.properties"/>
	
	<!-- 直接使用 bean 无法 扫描  Domain 中的  @Value 注解，必须使用 ： context:component-scan  -->
	<!-- <bean class="cc.msonion.parent.pojo.Domain"></bean> -->

	<!-- 注意，这里扫描的包 和 service 中扫描的包，不要冲突！！！ -->

	<!--  OK  -->
	<context:component-scan base-package="cc.msonion.carambola.parent.pojo" />

	<!--  msyt-parent-ext 不可以全部扫描，因为包括所有  -->
	<!--<context:component-scan base-package="cc.msonion.carambola.parent.ext"/>-->

	<!-- 扫描日志，加载 -->
	<context:component-scan base-package="cc.msonion.carambola.parent.ext.log"/>

	<!-- 扫描动态配置 -->
	<context:component-scan base-package="cc.msonion.carambola.parent.ext.pojo.setting"/>
	
	<context:component-scan base-package="cc.msonion.carambola.parent.pojo.zk.client" />


	<!-- RetryNTimes -->
	<bean id="retryPolicy" class="cc.msonion.carambola.parent.pojo.zk.retrypolicy.MsOnionRetryNTimes">
		<constructor-arg name="n"  value="${zk.retryPolicyN}"></constructor-arg>
		<constructor-arg name="sleepMsBetweenRetries"  value="${zk.retryPolicy.sleepMsBetweenRetries}"></constructor-arg>
	</bean>
	
	<!-- MsOnionCuratorZookeeperClient -->
	<bean class="cc.msonion.carambola.parent.pojo.zk.client.MsOnionCuratorZookeeperClient">
		<!--<constructor-arg name="zkConnectString"  value="zk01:2181,zk02:2181,zk03:2181"></constructor-arg>-->

		<constructor-arg name="zkConnectString"  value="${zk.connectString}"></constructor-arg>


		<constructor-arg name="sessionTimeoutMs" value="5000"></constructor-arg>
		<constructor-arg name="retryPolicy" ref="retryPolicy"></constructor-arg>
	</bean>

	<!-- 分布式文件系统客户端， MsOnionFastDFSClient -->
	<!--<bean class="cc.msonion.carambola.parent.ext.dfs.clients.MsOnionFastDFSClient">
		<constructor-arg name="configFilename"  value="${dfs.fastdfs.configFilename}"></constructor-arg>
	</bean>-->

	<!-- RocketMQ ## Begin -->

	<!-- web.xml 中，由于Shiro，两个地方 applicationContext-*.xml ，导致所有的Beans 都初始化2次
	 ， RocketMQ Consumer 报错 ！！！ -->

	<!-- 普通消息（无序消息） Message Listener   -->
	<!--<bean id="managerConcurrentlyMessageListenerntly"
		  clacc.msonion.carambola.manager.web.mq.rocketmq.messagelistener.ManagerConcurrentlyMessageListenerntly"/>
-->
	<!-- 普通消息（无序消息）消费者 -->
	<!--<bean class="cc.msonion.carambola.manager.web.mq.rocketmq.ManagerPushConsumerExt">-->

		<!-- 构造方法参数 ： String consumerGroup, String namesrvAddr, String topic,
         String subExpression, MsOnionRocketMQMessageListenerConcurrently listenerConcurrently -->

		<!--<constructor-arg name="consumerGroup" value="${rocketmq.consumerGroup.managerWeb}"/>
		<constructor-arg name="namesrvAddr" value="${rocketmq.namesrvAddr}"/>
		<constructor-arg name="topic" value="${rocketmq.topic}"/>
		<constructor-arg name="subExpression" value="${rocketmq.consumer.subExpression.managerWeb}"/>
		<constructor-arg name="listenerConcurrently" ref="managerConcurrentlyMessageListenerntly"/>
		<constructor-arg name="consumeFromWhere" value="${rocketmq.consumer.consumeFromWhere}"/>

	</bean>-->

	<!-- RocketMQ ## End -->
	
</beans>
